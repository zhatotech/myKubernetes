https://helm.sh/docs/intro/quickstart/

From the Binary Releases

Every release of Helm provides binary releases for a variety of OSes. These binary versions can be manually downloaded and installed.

    Download your desired version
    Unpack it (tar -zxvf helm-v3.0.0-linux-amd64.tar.gz)
    Find the helm binary in the unpacked directory, and move it to its desired destination (mv linux-amd64/helm /usr/local/bin/helm)

From there, you should be able to run the client and add the stable repo: helm help.

Note: Helm automated tests are performed for Linux AMD64 only during CircleCi builds and releases. Testing of other OSes are the responsibility of the community requesting Helm for the OS in question.
From Script

Helm now has an installer script that will automatically grab the latest version of Helm and install it locally.

You can fetch that script, and then execute it locally. It's well documented so that you can read through it and understand what it is doing before you run it.

$ curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
$ chmod 700 get_helm.sh
$ ./get_helm.sh

Yes, you can curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash if you want to live on the edge.

Through Package Managers

The Helm community provides the ability to install Helm through operating system package managers. These are not supported by the Helm project and are not considered trusted 3rd parties.
From Homebrew (macOS)

Members of the Helm community have contributed a Helm formula build to Homebrew. This formula is generally up to date.

brew install helm

(Note: There is also a formula for emacs-helm, which is a different project.)
From Chocolatey (Windows)

Members of the Helm community have contributed a Helm package build to Chocolatey. This package is generally up to date.

choco install kubernetes-helm

From Scoop (Windows)

Members of the Helm community have contributed a Helm package build to Scoop. This package is generally up to date.

scoop install helm

From Apt (Debian/Ubuntu)

Members of the Helm community have contributed a Helm package for Apt. This package is generally up to date.

curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
sudo apt-get install apt-transport-https --yes
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
sudo apt-get update
sudo apt-get install helm

From dnf/yum (fedora)

Since Fedora 35, helm is available on the official repository. You can install helm with invoking:

sudo dnf install helm

From Snap

The Snapcrafters community maintains the Snap version of the Helm package:

sudo snap install helm --classic

From pkg (FreeBSD)

Members of the FreeBSD community have contributed a Helm package build to the FreeBSD Ports Collection. This package is generally up to date.

pkg install helm

Development Builds

In addition to releases you can download or install development snapshots of Helm.
From Canary Builds

"Canary" builds are versions of the Helm software that are built from the latest main branch. They are not official releases, and may not be stable. However, they offer the opportunity to test the cutting edge features.

Canary Helm binaries are stored at get.helm.sh. Here are links to the common builds:

    Linux AMD64
    macOS AMD64
    Experimental Windows AMD64

From Source (Linux, macOS)

Building Helm from source is slightly more work, but is the best way to go if you want to test the latest (pre-release) Helm version.

You must have a working Go environment.

$ git clone https://github.com/helm/helm.git
$ cd helm
$ make

If required, it will fetch the dependencies and cache them, and validate configuration. It will then compile helm and place it in bin/helm.
Conclusion

In most cases, installation is as simple as getting a pre-built helm binary. This document covers additional cases for those who want to do more sophisticated things with Helm.

Once you have the Helm Client successfully installed, you can move on to using Helm to manage charts and add the stable repo.
